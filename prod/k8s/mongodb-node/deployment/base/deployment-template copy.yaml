apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: %APP%-%NODE%
  name: %APP%-%NODE%
spec:
  replicas: 1
  selector:
    matchLabels:
      app: %APP%-%NODE%
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: %APP%-%NODE%
    spec:
      containers:
      - image: mongo:6.0.3
        name: %APP%-%NODE%
        args: ["--dbpath","/data/db"]
        livenessProbe:
          exec:
            command:
              - mongosh
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongosh
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: password
        volumeMounts:
        - name: %APP%-%NODE%-data-dir
          mountPath: "/data/db"
      volumes:
      - name: %APP%-%NODE%-data-dir
        persistentVolumeClaim:
          claimName: %APP%-%NODE%-pvc