apiVersion: v1
kind: Service
metadata:
  labels:
    app: reports31-api
  name: reports31-api
spec:
  ports:
  - name: http
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    app: reports31-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: reports31
  name: reports31
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reports31
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: reports31
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - reports31
      containers:
      - args:
        - -c
        - cd /apps/fixes; ./fixes.sh reports31 30031 0; cron -f
        command:
        - /bin/sh
        env:
        - name: MYSQL_HOST
          value: reports31
        - name: MYSQL_PORT
          value: "30031"
        - name: AZURE_DW
          value: "0"
        image: brentgroves/reports-cron:1
        imagePullPolicy: Always
        name: reports31-cron
        volumeMounts:
        - mountPath: /etc/db-user-pass
          name: db-user-pass
          readOnly: true
        - mountPath: /apps
          name: reports31-volume
      dnsPolicy: Default
      hostNetwork: true
      initContainers:
      - args:
        - -c
        - cp -R /volume/* /init-data/
        command:
        - /bin/sh
        image: brentgroves/reports-volume-init:1
        imagePullPolicy: Always
        name: reports31-volume-init
        volumeMounts:
        - mountPath: /init-data
          name: reports31-volume
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: reports31-volume
      - name: db-user-pass
        secret:
          optional: false
          secretName: db-user-pass
